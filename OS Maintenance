           
           
           ### OS ###



# BLOCKSIZE: view

    #Solaris
    
    512 bytes by Unix convention
    
    
    
    
# COMPRESS: to do and undo
 
  #Compress file
  #http://www.computerhope.com/unix/ucompres.htm
  
compress to_del.txt

  
  #Uncompress file
  #http://www.computerhope.com/unix/uuncompr.htm
  
    #Options
    -c    Writes to the standard output; no files are changed and no .Z files are created.         
            The 
            behavior of zcat is identical to that of "uncompress -c".
    -f	When compressing, the -f option forces compression of files, even if it does not 
            actually reduce the size of the files, or if corresponding file.Z files 
            already 
            exist. If the -f option is not given, and the process is not running in the 
            background, prompts to verify whether an existing file.Z file should be 
            overwritte
            n. When uncompressing, does not prompt for overwriting files. If the -f option 
            is 
            not given, and the process is not running in the background, prompts to verify 
            whether an existing file should be overwritten. If the standard input is not a 
            terminal and -f is not given, writes a diagnostic message to standard error 
            and 
            exits with a status greater than 0.
    -v	Verbose. Writes to standard error any messages concerning the percentage reduction 
            or 
            expansion of each file.
    -b bits	Sets the upper limit (in bits) for common substring codes. Bits must be 
            between 9 
            and 16 (16 is the default). Lowering the number of bits will result in larger, 
            less-compressed files.
    file	A path name of a file to be compressed by compress, uncompressed by uncompress
            , or 
            whose uncompressed form is written to standard out by zcat. If file is         
            specified 
            as a dash ("-"), or if no file is specified, the standard input will be used.  
        
    #Exit status
        0    Operation successful.
        1	An error occurred.
        2	One or more files were not compressed because they would have increased in 
            size (and the -f option was not specified).
        >2	An error occurred.

uncompress to_del.txt              <== ".Z" assumed by default




# CPU: count physical/virtual CPU, cores, threads
    
    
    #Linux
        
        #Count the number of processing units (not actual cores: cores*its_hyperthreding)
        # (so for 2 cores with hyperthreding it may show 4)
        
cat /proc/cpuinfo | grep processor | wc -l

    4
    
        OR
    
nproc

    4


        #Full info (every processor or core is listed separately)
        
cat /proc/cpuinfo

    processor       : 0
    vendor_id       : GenuineIntel
    cpu family      : 6
    model           : 44
    model name      : Intel(R) Xeon(R) CPU           E5649  @ 2.53GHz
    stepping        : 2
    cpu MHz         : 2533.423
    cache size      : 12288 KB
    fpu             : yes
    fpu_exception   : yes
    cpuid level     : 11
    wp              : yes
    flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts xtopology tsc_reliable nonstop_tsc aperfmperf unfair_spinlock pni pclmulqdq ssse3 cx16 sse4_1 sse4_2 x2apic popcnt aes hypervisor lahf_lm ida arat epb dts
    bogomips        : 5066.84
    clflush size    : 64
    cache_alignment : 64
    address sizes   : 40 bits physical, 48 bits virtual
    power management:


        #lscpu
        
lscpu

    Architecture:          x86_64
    CPU op-mode(s):        32-bit, 64-bit
    Byte Order:            Little Endian
    CPU(s):                4
    On-line CPU(s) list:   0-3
    Thread(s) per core:    1
    Core(s) per socket:    1
    Socket(s):             4
    NUMA node(s):          1
    Vendor ID:             GenuineIntel
    CPU family:            6
    Model:                 44
    Stepping:              2
    CPU MHz:               2533.423
    BogoMIPS:              5066.84
    Hypervisor vendor:     VMware
    Virtualization type:   full
    L1d cache:             32K
    L1i cache:             32K
    L2 cache:              256K
    L3 cache:              12288K
    NUMA node0 CPU(s):     0-3


    #Solaris

        #Count of physical CPU
        
/usr/sbin/psrinfo -p

    4
    
        #Count of physical CPU and its cores

/usr/sbin/psrinfo -pv

    #If 1 CPU - 1 core
    
        The physical processor has 1 virtual processor (0)
          UltraSPARC-IIIi (portid 0 impl 0x16 ver 0x34 clock 1593 MHz)
        The physical processor has 1 virtual processor (1)
          UltraSPARC-IIIi (portid 1 impl 0x16 ver 0x34 clock 1593 MHz)
        The physical processor has 1 virtual processor (2)
          UltraSPARC-IIIi (portid 2 impl 0x16 ver 0x34 clock 1593 MHz)
        The physical processor has 1 virtual processor (3)
          UltraSPARC-IIIi (portid 3 impl 0x16 ver 0x34 clock 1593 MHz)

    #If 1 CPU - 4 core
    
        The physical processor has 4 virtual processors (0-3)
          SPARC64-VI (portid 1024 impl 0x6 ver 0x93 clock 2150 MHz)
        The physical processor has 4 virtual processors (8-11)
          SPARC64-VI (portid 1032 impl 0x6 ver 0x93 clock 2150 MHz)


        #Total count of cores (not threads, etc) across all the CPUs (just another way)

kstat cpu_info|grep core_id|sort -u|wc -l

      4


        #Via script (root is not necessary)
    
touch /tmp/cpu.test ; chmod +x /tmp/cpu.test
vi /tmp/cpu.test


#!/bin/bash

/usr/bin/kstat -m cpu_info | egrep "chip_id|core_id|module: cpu_info" > /var/tmp/cpu_info.log

nproc=`(grep chip_id /var/tmp/cpu_info.log | awk '{ print $2 }' | sort -u | wc -l | tr -d ' ')`
ncore=`(grep core_id /var/tmp/cpu_info.log | awk '{ print $2 }' | sort -u | wc -l | tr -d ' ')`
vproc=`(grep 'module: cpu_info' /var/tmp/cpu_info.log | awk '{ print $4 }' | sort -u | wc -l | tr -d ' ')`

nstrandspercore=$(($vproc/$ncore))
ncoresperproc=$(($ncore/$nproc))

speedinmhz=`(/usr/bin/kstat -m cpu_info | grep clock_MHz | awk '{ print $2 }' | sort -u)`
speedinghz=`echo "scale=2; $speedinmhz/1000" | bc`

echo "Total number of physical processors: $nproc"
echo "Number of virtual processors: $vproc"
echo "Total number of cores: $ncore"
echo "Number of cores per physical processor: $ncoresperproc"
echo "Number of hardware threads (strands or vCPUs) per core: $nstrandspercore"
echo "Processor speed: $speedinmhz MHz ($speedinghz GHz)"

# now derive the vcpu-to-core mapping based on above information #

echo -e "\n** Socket-Core-vCPU mapping **"
let linenum=2

for ((i = 1; i <= ${nproc}; ++i ))
do
        chipid=`sed -n ${linenum}p /var/tmp/cpu_info.log | awk '{ print $2 }'`
        echo -e "\nPhysical Processor $i (chip id: $chipid):"

        for ((j = 1; j <= ${ncoresperproc}; ++j ))
        do
                let linenum=($linenum + 1)
                coreid=`sed -n ${linenum}p /var/tmp/cpu_info.log | awk '{ print $2 }'`
                echo -e "\tCore $j (core id: $coreid):"

                let linenum=($linenum - 2)
                vcpustart=`sed -n ${linenum}p /var/tmp/cpu_info.log | awk '{ print $4 }'`

                let linenum=(3 * $nstrandspercore + $linenum - 3)
                vcpuend=`sed -n ${linenum}p /var/tmp/cpu_info.log | awk '{ print $4 }'`

                echo -e "\t\tvCPU ids: $vcpustart - $vcpuend"
                let linenum=($linenum + 4)
        done
done


    Total number of physical processors: 1
    Number of virtual processors: 16
    Total number of cores: 4
    Number of cores per physical processor: 4
    Number of hardware threads (strands or vCPUs) per core: 4
    Processor speed: 1414 MHz (1.41 GHz)
    
    ** Socket-Core-vCPU mapping **
    
    Physical Processor 1 (chip id: 0):
            Core 1 (core id: 1026):
                    vCPU ids: 0 - 3
            Core 2 (core id: 1029):
                    vCPU ids: 4 - 7
            Core 3 (core id: 1034):
                    vCPU ids: 8 - 11
            Core 4 (core id: 1034):
                    vCPU ids: 12 - 15


    #HP-UX
    
/usr/contrib/bin/machinfo

    ...
    CPU info:
       Intel(R) Itanium 2 9100 series processor (1.6 GHz, 18 MB)
       2 cores, 4 logical processors per socket
       533 MT/s bus, CPU version A1
              Active processor count:
              1 socket
              2 cores (2 per socket)
              2 logical processors (2 per socket)
              LCPU attribute is disabled



# DATE: formatting

    #http://www.cyberciti.biz/faq/linux-unix-formatting-dates-for-display/
    

date +"%m-%d-%Y"

    09-14-2016

    
date +"%m%d%y"

    091416
    

date +"%D"

    09/14/16


date +"%H:%M:%S"   (in 24-hours format)

    07:09:46
    

date +"%m-%d-%Y %r"

    09-14-2016 06:58:53 AM
    
    
date +"%m-%d-%Y %T"

    09-14-2016 07:01:44
    
    
date "+%D %T"

    09/14/16 07:15:33
    
    


# DATE: add to the file name

touch to_del.txt.$(date +%Y%m%d)

    ls -la to_del*
    
    -rw-rw-r--   1 leis     leis           0 Mar 13 10:41 to_del.txt.20170313
    
    
touch to_del.txt.$(date +%m%d%y)

    ls -la to_del*
    
    -rw-r--r--   1 oracle   dba            0 Feb 15 04:53 to_del.txt.021517


touch to_del.txt.$(date +%Y%m%d_%H%M)

    ls -la to_del*
    
    -rw-r--r--   1 oracle   dba            0 Feb 15 05:02 to_del.txt.20170215_0502




# FIND: word in files

    #At specified directory
    
find /leis/test/R32.0/leisweb/webapps/leisweb -type f -exec grep 'jsp' /dev/null {} +

    #At current directory
    
find . -type f -exec grep 'jsp' /dev/null {} +




# FIND: files basing on modifying date


    #Modified less than 2 days ago
    
find . -mtime -2

    #Modified more then 2 days ago

find . -mtime +2

    #Modified today

find . -mtime 0




# FIND: TAB in files

    #Place cursor to the string, which probably contains TAB. Fire this command:
    
:.l

    #If there some TAB symbols, they will be temporary replaced with "^I" symbol.




# FILE: is it 32-bit or 64-bit?

file libclntsh.so.11.1

        #Output in case of 32-bit:

    libclntsh.so.11.1:      ELF 32-bit MSB dynamic lib SPARC32PLUS Version 1, V8+ Required, dynamically linked, not stripped
    
        #Output in case of 64-bit:
        
    libclntsh.so.11.1:      ELF 64-bit MSB dynamic lib SPARCV9 Version 1, dynamically linked, not stripped




# FILE: who is using?

    #Process id will be provided as output (if someone uses this file) or not (if not)
    
    
    #SunOS
    
/usr/sbin/fuser -u tcb.log

    tcb.log:    26545o(leis)


    #Linux
    
/usr/sbin/lsof /dev/rdisk/disk407




# FS: free space

    #Linux, Solaris
    
        #File systems
    
df -h

    Filesystem                       Size  Used Avail Use% Mounted on
    /dev/mapper/VolGroup00-lvolroot   14G  4.6G  8.5G  35% /
    tmpfs                            7.8G     0  7.8G   0% /dev/shm
    /dev/sda1                        485M   39M  421M   9% /boot
    /dev/mapper/vg01-lv_build         50G  7.3G   40G  16% /build

    
    #HP-UX
    
        #File systems
        
bdf

    Filesystem          kbytes    used   avail %used Mounted on
    /dev/vg00/lvol3    1048576  227664  814600   22% /
    /dev/vg00/lvol6    4194304 3083808 1101984   74% /usr
    /dev/vg00/lvol5    1048576   35648 1012928    3% /tmp
    /dev/vg00/lvol4    6864896 5440376 1413408   79% /opt
    /dev/vg00/lvol12    114688    5496  108344    5% /home
    /dev/vg01/lvol4    20480000 13294988 6736215   66% /cvs
    /dev/vg01/lvol3    35840000 19975598 14873543   57% /build
    /dev/vg01/lvol1    10256384 8545815 1603982   84% /app




# JAVA: which bit of java is in use

java -d64 -version

    #for 32-bit OS output is
    
        Error: This Java instance does not support a 64-bit JVM.
        Please install the desired version.

    #for 64-bit OS output is
    
        java version "1.6.0_81"
        Java(TM) SE Runtime Environment (build 1.6.0_81-b08)
        Java HotSpot(TM) 64-Bit Server VM (build 20.81-b05, mixed mode)

    


# LINK: create symbolik link

    #Create symbolik link to the file
    
/usr/bin/ln –s full_path_to_the_file link_name




# LINK: delete symbolik link

    #Delete symbolik link to the file
    
/usr/local/bin/unlink link_name




# MEMORY: system's installed memory


    #Solaris
    
        #Installed
        
/usr/sbin/prtconf | grep Memory

    Memory size: 65408 Megabytes


    #HP-UX
    
        #Installed
        
/usr/contrib/bin/machinfo

    ...
    Memory: 16335 MB (15.95 GB)
    ... 
    
    
    #Linux
    
        #free (in Mb)
             15951 Mb - installed
        
free -m
    
                 total       used       free     shared    buffers     cached
    Mem:         15951      15724        227          0        444      14517
    -/+ buffers/cache:        763      15188
    Swap:        15999          0      15999


        #top
        
top

    top - 10:35:05 up 42 days, 15:28,  1 user,  load average: 0.00, 0.00, 0.00
    Tasks: 157 total,   1 running, 152 sleeping,   4 stopped,   0 zombie
    Cpu(s):  1.2%us,  0.7%sy,  0.0%ni, 98.0%id,  0.1%wa,  0.0%hi,  0.0%si,  0.0%st
    Mem:  16334820k total, 16095148k used,   239672k free,   454940k buffers
    Swap: 16383992k total,        0k used, 16383992k free, 14865688k cached
    
      PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
     2124 oracle    -2   0 3191m  15m  14m S  2.0  0.1 708:16.02 oracle
        1 root      20   0 19348 1548 1224 S  0.0  0.0   0:25.20 init
        2 root      20   0     0    0    0 S  0.0  0.0   0:00.43 kthreadd
        ...

        
        #meminfo
            16334820 kB - installed
        
cat /proc/meminfo

    MemTotal:       16334820 kB
    MemFree:          239184 kB
    Buffers:          454956 kB
    Cached:         14865792 kB
    SwapCached:            0 kB
    Active:          5437136 kB
    Inactive:       10057324 kB
    ...




# MEMORY: current usage

    #Solaris
        
/usr/bin/prstat -avm

       PID USERNAME USR SYS TRP TFL DFL LCK SLP LAT VCX ICX SCL SIG PROCESS/NLWP
     28153 root     0.6 5.2 0.0 0.0 0.0 0.0  94 0.1 237  67 12K   0 ufsrestore/1
      2051 lbuild   0.1 2.2 0.0 0.0 0.0 0.0  98 0.0  44  13 530   0 prstat/1
    ...
     NPROC USERNAME  SWAP   RSS MEMORY      TIME  CPU
        59 root      124M  148M   1.8%   0:28:47 5.7%
         3 lbuild   4344K   12M   0.1%   0:00:04 0.6%
    ...


    #Linux

        #free (in Mb)
             763 Mb - used
           15188 Mb - free 
        
free -m
    
                 total       used       free     shared    buffers     cached
    Mem:         15951      15724        227          0        444      14517
    -/+ buffers/cache:        763      15188
    Swap:        15999          0      15999
    
    
        #top
top

    top - 10:35:05 up 42 days, 15:28,  1 user,  load average: 0.00, 0.00, 0.00
    Tasks: 157 total,   1 running, 152 sleeping,   4 stopped,   0 zombie
    Cpu(s):  1.2%us,  0.7%sy,  0.0%ni, 98.0%id,  0.1%wa,  0.0%hi,  0.0%si,  0.0%st
    Mem:  16334820k total, 16095148k used,   239672k free,   454940k buffers
    Swap: 16383992k total,        0k used, 16383992k free, 14865688k cached
    
      PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
     2124 oracle    -2   0 3191m  15m  14m S  2.0  0.1 708:16.02 oracle
        1 root      20   0 19348 1548 1224 S  0.0  0.0   0:25.20 init
        2 root      20   0     0    0    0 S  0.0  0.0   0:00.43 kthreadd
        ...


        #vmstat
        
vmstat

    procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
     r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
     0  0      0 231488 454956 14865796    0    0    57    24    5   11  1  1 98  0  0




# NETWORK: which process uses this port?

    #ONLY FOR CURRENT OS USER

    #Step 1

touch /tmp/port2user.sh
chmod +x /tmp/port2user.sh    
vi /tmp/port2user.sh


    #Step 2
    
#!/bin/ksh

line='---------------------------------------------'
pids=$(/usr/bin/ps -ef | sed 1d | awk '{print $2}')

if [ $# -eq 0 ]; then
   read ans?"Enter port you would like to know pid for: "
else
   ans=$1
fi

for f in $pids
do
   /usr/proc/bin/pfiles $f 2>/dev/null | /usr/xpg4/bin/grep -q "port: $ans"
   if [ $? -eq 0 ]; then
      echo $line
      echo "Port: $ans is being used by PID:\c"
      /usr/bin/ps -ef -o pid -o args | egrep -v "grep|pfiles" | grep $f
   fi
done
exit 0


    #Step 3

ksh /tmp/port2user.sh 10000

    ---------------------------------------------
    Port: 80 is being used by PID:10802 /opt/jdk1.7.0_51/bin/sparcv9/java -client -Xdebug -Xnoagent -Xrunjdwp:transport

    OR
    
ksh /tmp/port2user.sh

    Enter port you would like to know pid for: 1521
    ---------------------------------------------
    Port: 1521 is being used by PID:27674 /opt/jdk1.7.0_95/bin/sparcv9/java -server -Xms1024m -Xmx1024m -XX:CompileThresh




# NETWORK: packet counts per second

    #Solaris
    
        #Just packet count, regardless the size of packet (the first line is the summary since boot)
    
netstat -i 1

        input   eri0      output       input  (Total)    output
    packets errs  packets errs  colls  packets errs  packets errs  colls
    846876292 0     1208416977 23514 0      882392456 0     1243933141 23514 0
    7       0     5       0     0      7       0     5       0     0
    5       0     3       0     0      5       0     3       0     0
   



# NOHUP: run
    #http://stackoverflow.com/questions/10408816/how-do-i-use-the-nohup-command-without-getting-nohup-out

    #In background, without nohup.out (specified output file is used instead)

nohup command > /tmp/test.out 2>&1 &


    #Without nohup.out (to specified file instead)
    
nohup command > /tmp/test.out 2>&1

    
    #In background, without nohup.out (specified output file is used instead), without waiting for inpur (specified input is used instead)
    
nohup command < /dev/null > /tmp/test.out 2>&1 &




# PASSWORD: clear password cache

    #Windows
    
cmd -> control keymgr.dll    
    
    
    

# PAGESIZE: view size for the page

    #Solaris, bytes
    
pagesize

    8192




# PKG: install
 
  #If there is no downloaded pkg
    #Solaris
pkg install gcc-48


  #Downloaded package
    #Solaris
pkgadd -d /u01/install/unzip/cvsbinar cvs-1.11.21-SunOS-5.8-i386

    #Linux
rpm -ivh cvs-1.11.22-5.el5.i386.rpm




# PKG: remove
  
  #Solaris
pkgrm package_name




# PKG: view installed
  
  #Solaris
pkginfo




# PORT: who uses this port (option #1)

    #It's better to do this as root (the only user who can read all processes)


        #1) Create script
    
rm /tmp/cp.sh ; touch /tmp/cp.sh ; chmod 777 /tmp/cp.sh ; vi /tmp/cp.sh


        #2) Edit script
    
#!/bin/bash
# Get the process which listens on port
# $1 is the port we are looking for
if [ $# -lt 1 ]
then
echo "Please provide a port number parameter for this script"
echo "e.g. $0 22"
exit
fi
echo "Greping for your port, please be patient (CTRL+C breaks)"
for i in `ls /proc`
do
pfiles $i | grep AF_INET | grep $1
if [ $? -eq 0 ]
then
echo Is owned by pid $i
fi
done

        #3) Start script

. /tmp/cp.sh 5081

    Greping for your port, please be patient (CTRL+C breaks)
            sockname: AF_INET 0.0.0.0  port: 5081
    Is owned by pid 9833




# PORT: who uses this port (option #2)

netstat -a | grep -i listen

      *.sunrpc             *.*                0      0 49152      0 LISTEN
      *.32771              *.*                0      0 49152      0 LISTEN




# SAR: explanation

    #Run simple command
    
sar 1 3

    SunOS leis-np4 5.10 Generic_150400-13 sun4u    08/17/2017
    
    04:11:54    %usr    %sys    %wio   %idle
    04:11:55       2       2       0      96
    04:11:56       1       1       0      98
    04:11:57       3       3       0      94
    
    Average        2       2       0      96


    #Output explanation
    
    "1 3": Run 3 times every 1 second;

    %usr: User time; This shows the total time that the processor is spending on different process
    
    %sys: System time; this shows the percentage of time spend by the processor for operating system tasks(because the previous user shows the time spend for user end process)
    
    %wio: Waiting for I/O (does not include time when another process could be schedule to the CPU).
    
    %idle: Idle time spend by the processor.




# SIZE: check

    #Check size of the all files in the current directory (kB)

du -sk *

    2       ./29_default=1
    3415174 ./bu
    3       ./downloads
    2       ./env
    886143  ./install
    561     ./khlam
    272     ./log




# SIZE: order file sizes (desc)

    #Order files in current dir by their size in Gb/Mb/Kb
    
du -sh * | tee /tmp/size.txt | grep G | sort -rn ; cat /tmp/size.txt | grep M | sort -rn ; cat /tmp/size.txt | grep K | sort -rn ; rm /tmp/size.txt


    #Order files in current dir by their size in Kb
    
du -sk * | sort -rn

    88750816        ATT_data
    54586504        DeskTopServices
    3643848 lsrc
    2180436 DEPLOY
    1711036 REGRESSION




# SSTY: overall info

 #stty - change and print terminal line settings
 #erase CHAR - CHAR will erase the last character typed
stty erase ^h

 #Current configuration of terminal
stty -a




# STRING: view first N symbols

echo "123456789" | cut -c -3

    123




# STRING: cut string after particular symbol

echo 123:434 | sed -e "s/:.*//"

    123




# SORT: 

    #Origin file to sort:
    
        1,0,korch,3
        161,233,abbreviation,2
        13,234,wavak,6
        164,23,trol,1
        5,655,konan,3


    #Sort by 1st column:

sort -t "," -k 1 numbers.txt

    1,0,korch,3
    13,234,wavak,6
    161,233,abbreviation,2
    164,23,trol,1
    5,655,konan,3

        
        
    #Sort by 3nd column:

sort -t "," -k 3 numbers.txt

    161,233,abbreviation,2
    5,655,konan,3
    1,0,korch,3
    164,23,trol,1
    13,234,wavak,6
        
    


# SU: differents

    #environment of usr1, permissions of usr2
        
        #as usr1:  

su usr2

    
    #environment of usr2, permissions of usr2
        
        #as usr1:  
    
su - usr2              <== it runs .profile of usr2




# SUDO: links

    #https://books.google.com.ua/books?id=k9bHSd97HzMC&pg=PA424&lpg=PA424&dq=%22sudo+-i%22+option&source=bl&ots=A8SRzuiGny&sig=X4goIOFTvdxQIhBaBSP19e3I9qM&hl=en&sa=X&ved=0ahUKEwjT6veHmqjZAhXL_aQKHfVIBqoQ6AEIfTAJ#v=onepage&q=%22sudo%20-i%22%20option&f=false
    
    
    
    
# SUDO: syntax

    #https://www.sudo.ws/man/1.8.18/sudo.man.html
    
    #https://books.google.com.ua/books?id=k9bHSd97HzMC&pg=PA424&lpg=PA424&dq=%22sudo+-i%22+option&source=bl&ots=A8SRzuiGny&sig=X4goIOFTvdxQIhBaBSP19e3I9qM&hl=en&sa=X&ved=0ahUKEwjT6veHmqjZAhXL_aQKHfVIBqoQ6AEIfTAJ#v=onepage&q=sudo%20%5Boptions%5D%20%5Bcommand%5D&f=false


    #Login as root

/usr/local/bin/sudo su


    #Make command "ls -la" as "oracle" user
    
/usr/local/bin/sudo -u oracle ls -la


    #-i [command]

    The -i (simulate initial login) option runs the shell specified in the passwd(5) entry of the target user as a login shell. This means that
    login-specific resource files such as .profile or .login will be read by the shell.
    
    If a command is specified, it is passed to the shell for execution. Otherwise, an interactive shell is executed.
    
    sudo attempts to change to that user’s home directory before running the shell. It also initializes the environment, leaving DISPLAY and TERM unchanged, setting HOME, SHELL, USER, LOGNAME, and PATH, as well as the contents of /etc/environment on Linux and AIX systems. All other environment variables are removed.




# SUDO: log

    #Place log in non defatult location
    
Defaults log_year, logfile="/var/ora.log"

cat /var/ora.log

    Feb 13 11:47:45 2018 : xandsid : TTY=pts/5 ; PWD=/home/xandsid ; USER=oracle ; COMMAND=/usr/local/bin//pwd


    
    
# SUDOERS: location

    #Solaris
    
/usr/local/etc/sudoers


    #Linux
    
/etc/sudoers




# SUDOERS: update

    #Solaris
    
        #Have to be done via visudo only
        
        #Log as root
    
        #Make a copy of current sudoers file
        
cp /usr/local/etc/sudoers /usr/local/etc/sudoers.$(date +%Y%m%d_%H%M)

        #Start sudoers update
        
/usr/local/sbin/visudo




# SUDOERS: syntax

    #http://toroid.org/sudoers-syntax
    #https://www.sudo.ws/man/1.8.18/sudoers.man.html
    

    #User Host = (Runas) Command
    
    
    #Allow xandsid on host tld12 run all commands as oracle
    
xandsid tld12=(oracle) ALL




# TELNET: quit

    #Steps below
    
Ctl + ]
quit




# OS: версия

    #Linux
    
cat /proc/version

  Linux version 2.6.18-348.3.1.el5 (mockbuild@x86-022.build.eng.bos.redhat.com) (gcc 
  version 4.1.2 20080704 (Red Hat 4.1.2-54)) #1 SMP Tue Mar 5 13:19:32 EST 2013


    #HP-UX
    
/usr/contrib/bin/machinfo

    ...
    Platform info:
       Model:                  "ia64 hp server rx7640"
       Machine ID number:      1256ad48-02ec-11df-8959-2ba933d0d9ce
       Machine serial number:  USE4949532
    
    OS info:
       Nodename:  perfint2
       Release:   HP-UX B.11.31
       Version:   U (unlimited-user license)
       Machine:   ia64
       ID Number: 0307670344
       vmunix _release_version:
    @(#) $Revision: vmunix:    B.11.31_LR FLAVOR=perf




# OS: релиз
  
  
    #Linux
  
cat /etc/*-release

  Red Hat Enterprise Linux Server release 5.9 (Tikanga)


    #Solaris
  
cat /etc/release
                       Oracle Solaris 10 1/13 s10s_u11wos_24a SPARC
      Copyright (c) 1983, 2013, Oracle and/or its affiliates. All rights reserved.
                                Assembled 17 January 2013


    #HP-UX

/usr/contrib/bin/machinfo

    ...
    OS info:
       Nodename:  perfint2
       Release:   HP-UX B.11.31                 <== here it is
       Version:   U (unlimited-user license)
       Machine:   ia64
       ID Number: 0307670344
       vmunix _release_version:
    @(#) $Revision: vmunix:    B.11.31_LR FLAVOR=perf
    ...




# OS: patch level

uname -a
   SunOS leis1 5.10 Generic_150400-26 sun4u sparc SUNW,Sun-Fire-V440




# OS: architecture

    #Solaris
    
/bin/isainfo -kv
  64-bit sparcv9 kernel modules


    #HP-UX
    
/usr/contrib/bin/machinfo

    ...
    OS info:
       Nodename:  perfint2
       Release:   HP-UX B.11.31
       Version:   U (unlimited-user license)
       Machine:   ia64                          <== here it is
       ID Number: 0307670344
       vmunix _release_version:
    @(#) $Revision: vmunix:    B.11.31_LR FLAVOR=perf




# SERVER: reboot (immedially)

    #Solaris

shutdown -y -i6 -g0

    Or

sync;sync;init 6

    Or

reboot




# SERVER: shutdown (immedially)

    #Solaris
    
shutdown -y -i5 -g0

    OR

sync;sync;init 5

    OR
    
poweroff




# SHELL: list installed

    #View the list of installed shells

cat /etc/shells

    /bin/bash
    /bin/csh
    ...




# SHELL: customize nologin message

    #http://sharadchhetri.com/2011/05/23/customize-nologin-shell-message/
    
    
    
    
# UNZIP: gz

  #Extract file in it's dir (regardless in wich dir you are)
  
gunzip *.gz




# UNZIP: tar.gz

      #-z : Uncompress the resulting archive with gzip command.
      #-x : Extract to disk from the archive.
      #-v : Produce verbose output i.e. show progress and file names while extracting 
      files.
      #-f data.tar.gz : Read the archive from the specified file called data.tar.gz.

  #Extracting an entire archive (no metter where the file, into current dir)
  
tar -zxvf backup.tar.gz

  #Extracting an entire archive (specified through "-C" dir)
tar -zxvf data.tar.gz -C /data/projects

  #List files in archive
  
tar -tvf backup.tar.gz

  #Another way to unip all in current dir
  
gunzip -c R62.46.tar.gz | tar xvf -




# UNZIP: .tgz

gunzip -c ingres-10.0.0-132-com-sun-solaris-sparc-32-64bit.tgz | tar xvf -




# UNZIP: .tar.Z

    #First: unzip .tar.Z to .tar to current dir (initial file .tar.Z is lost)
    
uncompress ingres.tar.Z

    #Then: unzip .tar to current dir (initial file .tar stays)
    
tar -xvf ingres.tar




# USER: create

	#Log as root

	#Create user
	
	    #It's not necessary for home dir to be existing

/usr/local/bin/sudo /usr/sbin/useradd -m -d /export/home/leisweb -g leis leisweb




# USER: change pwd

    #Change pwd

/usr/local/bin/sudo /usr/bin/passwd svn




# USER: delete

	#Log as root
	
		
	#Delete user (AND the home director)
	
		#Archive the user's home directory
		
		#Won't delete anything if no home dir is specified for user (it will be error)
	
/usr/local/bin/sudo /usr/sbin/userdel -r svn


	#Delete user (WITHOUT the home director)
	
/usr/local/bin/sudo /usr/sbin/userdel svn




# USER: change a home directory

	#Log as root
	
	    #Directory should exist
	
/usr/local/bin/sudo /usr/sbin/usermod -d /export/home/leisweb leisweb




# ZIP

  #Folder (to current location)
  
zip -r weekly_at_160405.zip /leis/.snapshot/weekly.0/LeisO


  #Files (to current location)

zip squash.zip file1 file2 file3


  #All files and dirs in current directory (to .tar file)
  
tar cvf test.tar *


  #All files and dirs in current directory (to .tar.gz file)
  
tar cvf - * | gzip -c > all_migration_data.tar.gz




# ZIP: split archive to parts

    #View current file
    
du -sh *

    164M   original.tar
    
    
    #Split archive to parts 100M each part

split -b 100m original.tar "splited.tar._"
        

    #View current file and its splitted parts
    
du -sh *

     164M   original.tar
     100M   splited.tar._aa
      64M   splited.tar._ab




# ZIP: unsplit parts to archive

    #View current file and its splitted parts
    
du -sh *

     164M   original.tar
     100M   splited.tar._aa
      64M   splited.tar._ab

    
    #Make file reasemled.tar from splited parts
    
cat splited.tar._* > reasemled.tar

    
    #View merged file
    
du -sh *

     164M   original.tar
     164M   reasemled.tar
     100M   splited.tar._aa
      64M   splited.tar._ab




# VI: delete lines  

    #5 consequent lines starting at the cursor
    
5dd     <== from command (not "insert") mode

    #Lines from 51 to 53 (including 51 and 53)
    
:51,53d




# VI: sho line number

:set number




# VI: substitution

  #Substitute specified symbol by another symbol

:1,$s/R98.0/R97.0/g          <== from 1st string to the end of the file
:%s/R98.0/R97.0/g            <== in the whole file

	LEISDIR=/leis/test/R30.0/leis
	LEISDIR=/appl/R33.0/leis
:96,$s/\/leis\/test\/R30.0\/leis/\/appl\/R33.0\/leis/g


































